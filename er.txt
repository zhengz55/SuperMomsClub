CREATE TABLE members (
memberID SERIAL PRIMARY KEY,
username VARCHAR(20) UNIQUE,
password VARCHAR(30),
firstName VARCHAR(100),
lastName VARCHAR(100),
email VARCHAR(100),
type integer,
interests varchar(1000),
language_preference integer,
bio varchar(2000)
);

CREATE TABLE events (
ID SERIAL PRIMARY KEY,
title VARCHAR(100),
start_date VARCHAR(50),
end_date VARCHAR(50),
start_time VARCHAR(20),
end_time VARCHAR(20),
headcount VARCHAR(10),
description VARCHAR(2000),
site VARCHAR(400),
member_id integer references members(id),
photo VARCHAR(400)
);

CREATE TABLE products (
ID SERIAL PRIMARY KEY,
name VARCHAR(100),
stock integer,
description VARCHAR(500),
image VARCHAR(100),
price integer,
purchases integer
);

CREATE TABLE blogs (
blogID SERIAL PRIMARY KEY,
title VARCHAR(100),
content VARCHAR(20000),
photo VARCHAR(400),
ts TIMESTAMP,
link VARCHAR(400),
member_id integer references members(id)
);

CREATE TABLE workshops (
ID SERIAL PRIMARY KEY,
name VARCHAR(200),
image VARCHAR(100),
description VARCHAR(4000),
link VARCHAR(200),
signup_start VARCHAR(200),
signup_end VARCHAR(200),
site VARCHAR(200),
capacity integer,
member_id integer references members(memberid),
participants VARCHAR(2000)
);

CREATE TABLE comments (
commentID SERIAL PRIMARY KEY,
member_name VARCHAR(100) references members(username),
member_ID integer references members(memberid),
content VARCHAR(2000),
blog_ID integer references blogs(blogid),
ts TIMESTAMP
);

CREATE TABLE messages (
message_ID SERIAL PRIMARY KEY,
member_id integer references members(id),
content VARCHAR(2000),
ts TIMESTAMP
);










